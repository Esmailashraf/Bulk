@model ProductVM
<div class="card shadow border-0 mt-4">
	<div class="card-header bg-secondary bg-gradient ml-0 py-3">
		<div class="row">
			<div class="col-12 text-center">
				<h2 class="text-primary">@(Model.Product.Id!=0?"Update":"Create") Product</h2>

			</div>
		</div>
	</div>
	<div class="card-body p-4">
		<form method="post" class="row" enctype="multipart/form-data">
			<input asp-for="Product.Id" hidden/>
			<input asp-for="Product.ImageUrl" hidden />

			<div class="row">
				<div class="col-10">
					<div class="border pt-3 mt-4">
						<div class="row pt-2">
						</div>
						@*div asp-validation-summary="ModelOnly"></div>*@
						<div class="mb-3 row p-1">
							<label asp-for="Product.Title" class="p-0"></label>
							<input asp-for="Product.Title" class="form-control" />
							<span asp-validation-for="Product.Title" class="text-danger"></span>
						</div>
						<div class="mb-3 row p-1">
							<label asp-for="Product.Description" class="p-0 text-muted"></label>
							<textarea asp-for="Product.Description" class="form-control" ><</textarea>

						</div>
						<div class="mb-3 row p-1">
							<label asp-for="Product.ISBN" class="p-0"></label>
							<input asp-for="Product.ISBN" class="form-control" />
							<span asp-validation-for="Product.ISBN" class="text-danger"></span>
						</div>
						<div class="mb-3 row p-1">
							<label asp-for="Product.Author" class="p-0"></label>
							<input asp-for="Product.Author" class="form-control" />
							<span asp-validation-for="Product.Author" class="text-danger"></span>
						</div>
						<div class="mb-3 row p-1">
							<label asp-for="Product.ListPrice" class="p-0"></label>
							<input asp-for="Product.ListPrice" class="form-control" />
							<span asp-validation-for="Product.ListPrice" class="text-danger"></span>
						</div>
						<div class="mb-3 row p-1">
							<label asp-for="Product.Price" class="p-0"></label>
							<input asp-for="Product.Price" class="form-control" />
							<span asp-validation-for="Product.Price" class="text-danger"></span>
						</div>
						<div class="mb-3 row p-1">
							<label asp-for="Product.Price50" class="p-0"></label>
							<input asp-for="Product.Price50" class="form-control" />
							<span asp-validation-for="Product.Price50" class="text-danger"></span>
						</div>
						<div class="mb-3 row p-1">
							<label asp-for="Product.Price100" class="p-0"></label>
							<input asp-for="Product.Price100" class="form-control" />
							<span asp-validation-for="Product.Price100" class="text-danger"></span>
						</div>
						<div class="mb-3 row p-1">
							<label asp-for="Product.ImageUrl" class="p-0"></label>
							<input type="file" name="file" class="form-control" />
							<span asp-validation-for="Product.ImageUrl" class="text-danger"></span>
						</div>
						<div class="mb-3 row p-1">
							<select asp-for="Product.CategoryId" asp-items="@Model.CategoryList"
							class="form-select">
								<option disabled selected >--Select Category--</option>
							</select>
							<label asp-for="Product.CategoryId" class="p-0"></label>
							<span asp-validation-for="@Model.Product.CategoryId" class="text-danger"></span>
						</div>
						<div class="row">
							<div class="col-6 col-md-3">
								@if(Model.Product.Id!=0)
								{
									<button type="submit" class="btn btn-primary form-control" >Update</button>

								}
								else
								{
									<button type="submit" class="btn btn-primary form-control">Create</button>
								}

								</div>
								<div class="col-6 col-md-3">
							<a asp-controller="Product" asp-action="Index" class="btn btn-secondary form-control" >
								back to list
							</a>

								</div>
							</div>
						</div>

				</div>
				<div  class="col-2">
					<img src="@Url.Content(Model.Product.ImageUrl)" width="100%"
 style="border-radius:5px; border:1px solid #bbb9b9"/>

				</divclass>
			</div>
			</form>

		</div>
</div>


@section scripts{
	<script>
		tinymce.init({
		  selector: 'textarea',
		  plugins: [
			// Core editing features
			'anchor', 'autolink', 'charmap', 'codesample', 'emoticons', 'image', 'link', 'lists', 'media', 'searchreplace', 'table', 'visualblocks', 'wordcount',
			// Your account includes a free trial of TinyMCE premium features
			// Try the most popular premium features until Mar 19, 2025:
			'checklist', 'mediaembed', 'casechange', 'export', 'formatpainter', 'pageembed', 'a11ychecker', 'tinymcespellchecker', 'permanentpen', 'powerpaste', 'advtable', 'advcode', 'editimage', 'advtemplate', 'ai', 'mentions', 'tinycomments', 'tableofcontents', 'footnotes', 'mergetags', 'autocorrect', 'typography', 'inlinecss', 'markdown','importword', 'exportword', 'exportpdf'
		  ],
		  toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | addcomment showcomments | spellcheckdialog a11ycheck typography | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
		  tinycomments_mode: 'embedded',
		  tinycomments_author: 'Author name',
		  mergetags_list: [
			{ value: 'First.Name', title: 'First Name' },
			{ value: 'Email', title: 'Email' },
		  ],
		  ai_request: (request, respondWith) => respondWith.string(() => Promise.reject('See docs to implement AI Assistant')),
		});
	</script>
	@{

	<partial name="_ValidationScriptsPartial" />
	}
} 